{"version":3,"sources":["assets/img/remove.svg","assets/img/close.svg","assets/img/edit.svg","assets/img/add.svg","components/Badge/index.js","components/List/index.js","components/AddList/index.js","components/Task/AddTaskForm.js","components/Task/Task.js","components/Task/index.js","App.js","index.js"],"names":["module","exports","Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","key","active","id","icon","name","tasks","length","src","removeSvg","alt","window","confirm","axios","delete","then","removeList","AddList","colors","onAdd","useState","visiblePopup","setVisiblePopup","seletedColor","selectColor","isLoading","setIsLoading","inputValue","setInputValue","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","closeSvg","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","catch","alert","finally","AddTaskForm","list","onAddTask","visibleForm","setFormVisible","toggleFormVisible","disabled","obj","listId","text","completed","addSvg","Task","onEdit","onComplete","checked","htmlFor","Tasks","onEditTitle","onRemoveTask","onEditTask","onCompleteTask","withoutEmpty","to","style","hex","newTitle","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","get","taskObj","newList","newTaskText","taskId","onEditListTitle","title","location","pathname","split","find","Number","push","newLists","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5787f40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.95f30ee9.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.10c581b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.e6d3868a.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.04bce1ba.svg\";","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Badge.scss';\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n  <i\r\n    onClick={onClick}\r\n    className={classNames('badge', { [`badge--${color}`]: color }, className)}\r\n  ></i>\r\n);\r\n\r\nexport default Badge;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\nimport removeSvg from 'assets/img/remove.svg'\r\nimport Badge from '../Badge'\r\nimport './List.scss'\r\n\r\nconst List = ({\r\n    items,\r\n    isRemovable,\r\n    onClick,\r\n    onRemove,\r\n    onClickItem,\r\n    activeItem\r\n}) => {\r\n    const removeList = item => {\r\n        if (window.confirm('Вы действительно хотите удалить список?')) {\r\n          axios.delete('http://localhost:3001/lists/' + item.id).then(() => {\r\n            onRemove(item.id);\r\n          });\r\n        }\r\n      };\r\n    return (\r\n        <ul onClick={onClick} className=\"list\">\r\n            {items.map((item, index) => (\r\n                <li\r\n                key={index}\r\n                className={classNames(item.className, {\r\n                    active: item.active\r\n                    ? item.active\r\n                    : activeItem && activeItem.id === item.id\r\n                })}\r\n                onClick={onClickItem ? () => onClickItem(item) : null}\r\n                >\r\n                <i>{item.icon ? item.icon : <Badge color={item.color.name} />}</i>\r\n                <span>\r\n                    {item.name}\r\n                    {item.tasks && ` (${item.tasks.length})`}\r\n                </span>\r\n                {isRemovable && (\r\n                    <img\r\n                    className=\"list__remove-icon\"\r\n                    src={removeSvg}\r\n                    alt=\"Remove icon\"\r\n                    onClick={() => removeList(item)}\r\n                    />\r\n                    )}\r\n                    </li>\r\n                    ))}\r\n        </ul>\r\n    )\r\n}\r\nexport default List","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport List from '../List';\r\nimport Badge from '../Badge';\r\n\r\nimport closeSvg from 'assets/img/close.svg';\r\n\r\nimport './AddList.scss';\r\n\r\nconst AddList = ({ colors, onAdd }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [seletedColor, selectColor] = useState(3);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  useEffect(() => {\r\n    if (Array.isArray(colors)) {\r\n      selectColor(colors[0].id);\r\n    }\r\n  }, [colors]);\r\n\r\n  const onClose = () => {\r\n    setVisiblePopup(false);\r\n    setInputValue('');\r\n    selectColor(colors[0].id);\r\n  };\r\n\r\n  const addList = () => {\r\n    if (!inputValue) {\r\n      alert('Введите название списка');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    axios\r\n      .post('http://localhost:3001/lists', {\r\n        name: inputValue,\r\n        colorId: seletedColor\r\n      })\r\n      .then(({ data }) => {\r\n        const color = colors.filter(c => c.id === seletedColor)[0];\r\n        const listObj = { ...data, color, tasks: [] };\r\n        onAdd(listObj);\r\n        onClose();\r\n      })\r\n      .catch(() => {\r\n        alert('Ошибка при добавлении списка!');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopup(true)}\r\n        items={[\r\n          {\r\n            className: 'list__add-button',\r\n            icon: (\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M8 1V15\"\r\n                  stroke=\"black\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M1 8H15\"\r\n                  stroke=\"black\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n            ),\r\n            name: 'Добавить список'\r\n          }\r\n        ]}\r\n      />\r\n      {visiblePopup && (\r\n        <div className=\"add-list__popup\">\r\n          <img\r\n            onClick={onClose}\r\n            src={closeSvg}\r\n            alt=\"Close button\"\r\n            className=\"add-list__popup-close-btn\"\r\n          />\r\n\r\n          <input\r\n            value={inputValue}\r\n            onChange={e => setInputValue(e.target.value)}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Название списка\"\r\n          />\r\n\r\n          <div className=\"add-list__popup-colors\">\r\n            {colors.map(color => (\r\n              <Badge\r\n                onClick={() => selectColor(color.id)}\r\n                key={color.id}\r\n                color={color.name}\r\n                className={seletedColor === color.id && 'active'}\r\n              />\r\n            ))}\r\n          </div>\r\n          <button onClick={addList} className=\"button\">\r\n            {isLoading ? 'Добавление...' : 'Добавить'}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport addSvg from '../../assets/img/add.svg';\r\n\r\nconst AddTaskForm = ({ list, onAddTask }) => {\r\n  const [visibleForm, setFormVisible] = useState(false);\r\n  const [inputValue, setInputValue] = useState();\r\n  const [isLoading, setIsLoading] = useState('');\r\n\r\n  const toggleFormVisible = () => {\r\n    setFormVisible(!visibleForm);\r\n    setInputValue('');\r\n  };\r\n\r\n  const addTask = () => {\r\n    const obj = {\r\n      listId: list.id,\r\n      text: inputValue,\r\n      completed: false\r\n    };\r\n    setIsLoading(true);\r\n    return obj.text.length > 0 ? axios\r\n      .post('http://localhost:3001/tasks', obj)\r\n      .then(({ data }) => {\r\n        onAddTask(list.id, data);\r\n        toggleFormVisible();\r\n      })\r\n      .catch(e => {\r\n        alert('Ошибка при добавлении задачи!');\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      })\r\n    :\r\n    window.alert(\"Введите название задачи\"),\r\n    setIsLoading(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks__form\">\r\n      {!visibleForm ? (\r\n        <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n          <img src={addSvg} alt=\"Add icon\" />\r\n          <span>Новая задача</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"tasks__form-block\">\r\n          <input\r\n            value={inputValue}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Текст задачи\"\r\n            onChange={e => setInputValue(e.target.value)}\r\n          />\r\n          <button disabled={isLoading} onClick={addTask} className=\"button\">\r\n            {isLoading ? 'Добавление...' : 'Добавить задачу'}\r\n          </button>\r\n          <button onClick={toggleFormVisible} className=\"button button--grey\">\r\n            Отмена\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;","import React from 'react';\r\n\r\nconst Task = ({ id, text, completed, list, onRemove, onEdit, onComplete }) => {\r\n  const onChangeCheckbox = e => {\r\n    onComplete(list.id, id, e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div key={id} className=\"tasks__items-row\">\r\n      <div className=\"checkbox\">\r\n        <input\r\n          onChange={onChangeCheckbox}\r\n          id={`task-${id}`}\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n        />\r\n        <label htmlFor={`task-${id}`}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"8\"\r\n            viewBox=\"0 0 11 8\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </label>\r\n      </div>\r\n      <p>{text}</p>\r\n      <div className=\"tasks__items-row-actions\">\r\n        <div onClick={() => onEdit(list.id, { id, text })}>\r\n          <svg\r\n            width=\"15\"\r\n            height=\"15\"\r\n            viewBox=\"0 0 15 15\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div onClick={() => onRemove(list.id, id)}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"11\"\r\n            viewBox=\"0 0 11 11\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport editSvg from 'assets/img/edit.svg';\r\n\r\nimport './Tasks.scss';\r\n\r\nimport AddTaskForm from './AddTaskForm';\r\nimport Task from './Task';\r\n\r\nconst Tasks = ({\r\n  list,\r\n  onEditTitle,\r\n  onAddTask,\r\n  onRemoveTask,\r\n  onEditTask,\r\n  onCompleteTask,\r\n  withoutEmpty\r\n}) => {\r\n  const editTitle = () => {\r\n    const newTitle = window.prompt('Название списка', list.name);\r\n    if (newTitle) {\r\n      onEditTitle(list.id, newTitle);\r\n      axios\r\n        .patch('http://localhost:3001/lists/' + list.id, {\r\n          name: newTitle\r\n        })\r\n        .catch(() => {\r\n          alert('Не удалось обновить название списка');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <Link to={`/lists/${list.id}`}>\r\n        <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n          {list.name}\r\n          <img onClick={editTitle} src={editSvg} alt=\"Edit icon\" />\r\n        </h2>\r\n      </Link>\r\n\r\n      <div className=\"tasks__items\">\r\n        {!withoutEmpty && list.tasks && !list.tasks.length && (\r\n          <h2>Задачи отсутствуют</h2>\r\n        )}\r\n        {list.tasks &&\r\n          list.tasks.map(task => (\r\n            <Task\r\n              key={task.id}\r\n              list={list}\r\n              onEdit={onEditTask}\r\n              onRemove={onRemoveTask}\r\n              onComplete={onCompleteTask}\r\n              {...task}\r\n            />\r\n          ))}\r\n        <AddTaskForm key={list.id} list={list} onAddTask={onAddTask} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import React, { useState, useEffect } from 'react';\nimport { List, AddList, Tasks  } from 'components';\nimport { Route, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\n\nconst App = () => {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n  let history = useHistory();\n  useEffect(() => {\n    axios\n      .get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n      .then(({ data }) => {\n        setLists(data);\n      });\n    axios.get('http://localhost:3001/colors').then(({ data }) => {\n      setColors(data);\n    });\n  }, []);\n\n  const onAddList = obj => {\n    const newList = [...lists, obj];\n    setLists(newList);\n  };\n\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj];\n      }\n      return item;\n    });\n    setLists(newList);\n  };\n\n  const onEditTask = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст задачи', taskObj.text);\n   \n    if (!newTaskText) {\n      return;\n    }\n\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText;\n          }\n          return task;\n        });\n      }\n      return list;\n    });\n    setLists(newList);\n    axios\n      .patch('http://localhost:3001/tasks/' + taskObj.id, {\n        text: newTaskText\n      })\n      .catch(() => {\n        alert('Не удалось обновить задачу');\n      });\n  };\n\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Вы действительно хотите удалить задачу?')) {\n      const newList = lists.map(item => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter(task => task.id !== taskId);\n        }\n        return item;\n      });\n      setLists(newList);\n      axios.delete('http://localhost:3001/tasks/' + taskId).catch(() => {\n        alert('Не удалось удалить задачу');\n      });\n    }\n  };\n\n  const onCompleteTask = (listId, taskId, completed) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = completed;\n          }\n          return task;\n        });\n      }\n      return list;\n    });\n    setLists(newList);\n    axios\n      .patch('http://localhost:3001/tasks/' + taskId, {\n        completed\n      })\n      .catch(() => {\n        alert('Не удалось обновить задачу');\n      });\n  };\n\n  const onEditListTitle = (id, title) => {\n    const newList = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    });\n    setLists(newList);\n  };\n\n  useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1];\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId));\n      setActiveItem(list);\n    }\n  }, [lists, history.location.pathname]);\n\n  return (\n    <div className=\"todo\">\n      <div className=\"todo__sidebar\">\n        <List\n          onClickItem={list => {\n            history.push(`/`);\n          }}\n          items={[\n            {\n              active: history.location.pathname === '/',\n              icon: (\n                <svg\n                  width=\"18\"\n                  height=\"18\"\n                  viewBox=\"0 0 18 18\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\n                    fill=\"black\"\n                  />\n                </svg>\n              ),\n              name: 'Все задачи'\n            }\n          ]}\n        />\n        {lists ? (\n          <List\n            items={lists}\n            onRemove={id => {\n              const newLists = lists.filter(item => item.id !== id);\n              setLists(newLists);\n            }}\n            onClickItem={list => {\n              history.push(`/lists/${list.id}`);\n            }}\n            activeItem={activeItem}\n            isRemovable\n          />\n        ) : (\n          'Загрузка...'\n        )}\n        <AddList onAdd={onAddList} colors={colors} />\n      </div>\n      <div className=\"todo__tasks\">\n        <Route exact path=\"/\">\n          {lists &&\n            lists.map(list => (\n              <Tasks\n                key={list.id}\n                list={list}\n                onAddTask={onAddTask}\n                onEditTitle={onEditListTitle}\n                onRemoveTask={onRemoveTask}\n                onEditTask={onEditTask}\n                onCompleteTask={onCompleteTask}\n                withoutEmpty\n              />\n            ))}\n        </Route>\n        <Route path=\"/lists/:id\">\n          {lists && activeItem && (\n            <Tasks\n              list={activeItem}\n              onAddTask={onAddTask}\n              onEditTitle={onEditListTitle}\n              onRemoveTask={onRemoveTask}\n              onEditTask={onEditTask}\n              onCompleteTask={onCompleteTask}\n            />\n          )}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n<Router><App /></Router>, document.getElementById('root'));\n\n"],"sourceRoot":""}